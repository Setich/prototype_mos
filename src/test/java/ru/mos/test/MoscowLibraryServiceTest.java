package ru.mos.test;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static io.qameta.allure.Allure.step;

public class MoscowLibraryServiceTest extends TestBase {

    @Test
    @DisplayName("Проверка информации о услуге(сервисе)")
    void infoServices() {
        step("Переход на страницу услуги Библиотеки Москвы", () -> {
            booksSearchPage.openPage("knigi/");

        });
        step("Проверка информации о услуге", () -> {
            booksSearchPage.infoBlock("Сервис, " +
                    "который делает библиотеки ближе к московским читателям. " +
                    "Мы собрали информацию обо всех бумажных книгах в одном месте. " +
                    "Ищите нужные экземпляры онлайн и выбирайте библиотеки, из которых их будет удобно забрать, " +
                    "заказывайте книги по единому читательскому билету и приходите за ними через несколько дней. " +
                    "Каждый заказ получает статус в личном кабинете: эта книга готова к выдаче, " +
                    "а эту скоро нужно вернуть. А ещё мы делаем классные тематические подборки и " +
                    "рассказываем о новинках, пополнивших и без того богатый библиотечный фонд.");
        });
    }

    @Test
    @DisplayName("Поиск книги серии 'Ведьмак'")
    void searchBookWithTitleWitcherTest() {
        step("Переход на страницу услуги Библиотеки Москвы", () -> {
            booksSearchPage.openPage("knigi/");
        });
        step("Поиск книги по серии 'Ведьмак'", () -> {
            booksSearchPage.searchBook("ведьмак");
        });
        step("Проверка количества найденых книг", () -> {
            searchResultsPage.numberOfInstancesFound("Найдено 65 вариантов");
        });
        step("Выбор фильтра сортировка по автору", () -> {
            searchResultsPage.selectTheAuthorFilter("Сапковский Анджей");
        });
        step("Проверка отображения книги в поисковой выдаче", () -> {
            searchResultsPage.checkingTheRequiredBook("Ведьмак. Крещение огнем");
        });
        step("Переход на страницу книги 'Ведьмак. Крещение огнем'", () -> {
            searchResultsPage.selectionBook("Ведьмак. Крещение огнем");
        });
        step("Проверка аннотации к книге", () -> {
            bookPage.verifyAnnotationBook("Ведьмак - это мастер меча и мэтр волшебства, " +
                    "ведущий непрерывную войну с кровожадными монстрами, угрожающими покою сказочной страны");
        });
    }

    @Test
    @DisplayName("Поиск книги серии 'Дневники'")
    void searchBookWhereAuthorKafka() {
        step("Переход на страницу услуги Библиотеки Москвы", () -> {
            booksSearchPage.openPage("knigi/");
        });
        step("Поиск книги по автору 'Кафка'", () -> {
            booksSearchPage.searchBook("кафка");
        });
        step("Проверка количества найденых книг", () -> {
            searchResultsPage.numberOfInstancesFound("Найдено 184 варианта");
        });
        step("Проверка отображения книги в поисковой выдаче", () -> {
            searchResultsPage.checkingTheRequiredBook("Дневники. Письма к Фелиции");
        });
        step("Переход на страницу книги 'Дневники. Письма к Фелиции'", () -> {
            searchResultsPage.selectionBook("Дневники. Письма к Фелиции");
        });
        step("Проверка аннотации к книге", () -> {
            bookPage.verifyAnnotationBook("Литературные наброски, сны и театральные впечатления, " +
                    "перемежаемые рассуждениями о собственной несостоятельности, упреками, страхами, " +
                    "терзаниями - это стало бесспорно самым значительным текстом Франца Кафки.");
        });
    }

    @Test
    @DisplayName("Поиск книги серии 'Дюна'")
    void searchBookWithTitleDuneTest() {
        step("Переход на страницу услуги Библиотеки Москвы", () -> {
            booksSearchPage.openPage("knigi/");
        });
        step("Поиск книги по серии 'Дюна'", () -> {
            booksSearchPage.searchBook("дюна");
        });
        step("Проверка количества найденых книг", () -> {
            searchResultsPage.numberOfInstancesFound("Найдено 124 варианта");
        });
        step("Проверка отображения книги в поисковой выдаче", () -> {
            searchResultsPage.checkingTheRequiredBook("Еретики Дюны: роман");
        });
        step("Переход на страницу книги 'Еретики Дюны: роман'", () -> {
            searchResultsPage.selectionBook("Еретики Дюны: роман");
        });
        step("Проверка аннотации к книге", () -> {
            bookPage.verifyAnnotationBook("Фрэнк Герберт (1920 — 1986) успел написать много, " +
                    "но в истории остался прежде всего как автор эпопеи «Дюна». Возможно, " +
                    "самой прославленной фантастической саги нашего столетия, саги, " +
                    "переведенной на десятки языков и приобретшей по всему миру миллионы поклонников.");
        });
    }

    @Test
    @DisplayName("Поиск книги серии 'Гарри Поттер и узник Азкабана'")
    void searchBookWithTitleGarryPotterTest() {
        step("Переход на страницу услуги Библиотеки Москвы", () -> {
            booksSearchPage.openPage("knigi/");
        });
        step("Поиск книги по серии 'Гарри Поттер'", () -> {
            booksSearchPage.searchBook("гарри поттер");
        });
        step("Проверка количества найденых книг", () -> {
            searchResultsPage.numberOfInstancesFound("Найдено 125 вариантов");
        });
        step("Проверка отображения книги в поисковой выдаче", () -> {
            searchResultsPage.checkingTheRequiredBook("Гарри Поттер и узник Азкабана");
        });
        step("Переход на страницу книги 'Гарри Поттер и узник Азкабана'", () -> {
            searchResultsPage.selectionBook("Гарри Поттер и узник Азкабана");
        });
        step("Проверка аннотации к книге", () -> {
            bookPage.verifyAnnotationBook("Книга, покорившая мир, эталон литературы для читателей всех возрастов, " +
                    "синоним успеха. Книга, сделавшая Дж.К. Роулинг самым читаемым писателем современности. Книга, " +
                    "ставшая культовой уже для нескольких поколений. «Гарри Поттер и узник Азкабана» - " +
                    "история продолжается.");
        });
    }

    @Test
    @DisplayName("Поиск книги серии 'Противостояние'")
    void searchBookWithTitleConfrontationTest() {
        step("Переход на страницу услуги Библиотеки Москвы", () -> {
            booksSearchPage.openPage("knigi/");
        });
        step("Поиск книги по серии 'Противостояние'", () -> {
            booksSearchPage.searchBook("Противостояние");
        });
        step("Проверка количества найденых книг", () -> {
            searchResultsPage.numberOfInstancesFound("Найдено 18 варианта");
        });
        step("Проверка отображения книги в поисковой выдаче", () -> {
            searchResultsPage.checkingTheRequiredBook("Противостояние: [роман: в 2 т. ]. Т. 1. Т. 1");
        });
        step("Переход на страницу книги 'Противостояние: [роман: в 2 т. ]. Т. 1. Т. 1'", () -> {
            searchResultsPage.selectionBook("Противостояние: [роман: в 2 т. ]. Т. 1. Т. 1");
        });
        step("Проверка аннотации к книге", () -> {
            bookPage.verifyAnnotationBook("Из секретной лаборатории министерства обороны США в результате трагической " +
                    "случайности вырвался на свободу опаснейший вирус. Последствия оказались катастрофическими - " +
                    "страна почти обезлюдела.");
        });
    }
}
